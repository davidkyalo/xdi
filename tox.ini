
# Test Configuration
;====================


; > ** DEFAULT CONFIGURATION ONLY **


; This file should only contain default configuration options and should be shared
; via the VCS (git). Local settings can be placed in separate file `pytest.py` as
; you'll see below. This is similar to our django settings, where global defaults
; reside in `settings.py` (which is shared via git) while environment specific settings
; reside in files such as `local_settings.py` and `im_settings.py` which are not
; tracked by git.

; To settup your local config, make a copy of this file (on the same dir) and name it
; `pytest.ini`. Then customize it for your local environment. I have already added
; `pytest.ini` to `.gitignore` so your changes will not be tracked by git.


## How Pytest Loads The Config Files.

; As described [here](https://docs.pytest.org/en/latest/customize.html#initialization-determining-rootdir-and-inifile),
; `pytest` will first look for a `pytest.ini` and if not available, will use either `tox.ini` or `setup.cfg` in that
; order (i think). So you should be able to run your tests even without a `pytest.ini` file.


## Contents of This File.

; **IMO :** Ideally, this file should contain the absolute minimum configuration required to run all tests
; (now and in future) successfully. That is, when writing tests we should make sure all config values required
; by those tests are available here (at least the defaults).


; ------------------------------------------------------------------------------------------------------------


[pytest]

# Default command line arguments.


# Glob-style pattern(s) for matching the test modules.
python_files = tests.py test_*.py *_tests.py

#Pattern for matching test classes
python_classes = *Test *Tests Test*

#Test markers

